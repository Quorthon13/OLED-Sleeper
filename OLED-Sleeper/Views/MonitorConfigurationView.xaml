<UserControl x:Class="OLED_Sleeper.Views.MonitorConfigurationView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModels="clr-namespace:OLED_Sleeper.ViewModels"
             xmlns:converters="clr-namespace:OLED_Sleeper.ViewModels.Converters"
             xmlns:models="clr-namespace:OLED_Sleeper.Models"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance Type=viewModels:MonitorConfigurationViewModel}"
             FontFamily="Bahnschrift">

    <UserControl.Resources>
        <converters:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
        <converters:StringNullOrEmptyToVisibilityConverter x:Key="ErrorVisibilityConverter" />

        <Style TargetType="ToolTip">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Foreground" Value="{StaticResource PrimaryForegroundColor}" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToolTip">
                        <Border Background="{StaticResource TertiaryBackgroundColor}"
                                BorderBrush="{StaticResource SeparatorColorBrush}"
                                BorderThickness="1"
                                CornerRadius="4"
                                Padding="8,5">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ModernCheckBox" TargetType="CheckBox">
            <Setter Property="Foreground" Value="{StaticResource PrimaryForegroundColor}" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="ToolTipService.InitialShowDelay" Value="200" />
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <StackPanel Orientation="Horizontal">
                            <Border x:Name="Box" Width="18" Height="18" BorderThickness="1" CornerRadius="3"
                                    BorderBrush="{StaticResource SecondaryForegroundColor}" Background="Transparent">
                                <Viewbox Margin="2">
                                    <Path x:Name="CheckMark" Data="M 0,5 L 4,9 L 10,1" StrokeThickness="2" Stroke="{StaticResource AccentColorBrush}" Visibility="Collapsed" />
                                </Viewbox>
                            </Border>
                            <ContentPresenter Margin="8,0,0,0" VerticalAlignment="Center" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ModernRadioButton" TargetType="RadioButton">
            <Setter Property="Foreground" Value="{StaticResource PrimaryForegroundColor}" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <StackPanel Orientation="Horizontal" Background="Transparent">
                            <Grid Width="18" Height="18">
                                <Ellipse Stroke="{StaticResource SecondaryForegroundColor}" StrokeThickness="1" />
                                <Ellipse x:Name="CheckMark" Fill="{StaticResource AccentColorBrush}" Width="10" Height="10" Visibility="Collapsed" />
                            </Grid>
                            <ContentPresenter Margin="8,0,0,0" VerticalAlignment="Center" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5" />
                                <Setter TargetName="CheckMark" Property="Fill" Value="{StaticResource SecondaryForegroundColor}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ModernSlider" TargetType="Slider">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Slider">
                        <Grid>
                            <Border x:Name="Track" Height="4" Background="{StaticResource TertiaryBackgroundColor}" CornerRadius="2" />
                            <Canvas>
                                <Border x:Name="PART_SelectionRange" Background="{StaticResource AccentColorBrush}" Height="4" CornerRadius="2" />
                            </Canvas>
                            <Track x:Name="PART_Track">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Width="16" Height="16" Background="{StaticResource PrimaryForegroundColor}" BorderBrush="{StaticResource SecondaryForegroundColor}" BorderThickness="1">
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="Thumb">
                                                <Ellipse Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Thumb" Property="BorderBrush" Value="{StaticResource AccentColorBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ModernTextBox" TargetType="TextBox">
            <Setter Property="Background" Value="{StaticResource TertiaryBackgroundColor}" />
            <Setter Property="Foreground" Value="{StaticResource PrimaryForegroundColor}" />
            <Setter Property="BorderBrush" Value="{StaticResource SeparatorColorBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="8,5" />
            <Setter Property="CaretBrush" Value="{StaticResource PrimaryForegroundColor}" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="border" CornerRadius="4"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer x:Name="PART_ContentHost" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource AccentColorBrush}" />
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ModernComboBox" TargetType="{x:Type ComboBox}">
            <Setter Property="Foreground" Value="{StaticResource PrimaryForegroundColor}" />
            <Setter Property="Background" Value="{StaticResource TertiaryBackgroundColor}" />
            <Setter Property="BorderBrush" Value="{StaticResource SeparatorColorBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="8,5" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton x:Name="ToggleButton"
                                          Focusable="false"
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border x:Name="templateRoot" CornerRadius="4"
                                                Background="{StaticResource TertiaryBackgroundColor}"
                                                BorderBrush="{StaticResource SeparatorColorBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}">
                                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" Margin="0" Width="{TemplateBinding ActualWidth}">
                                                <Path x:Name="arrow"
                                                      Data="F1 M 0,0 L 2.5,2.5 L 5,0 Z"
                                                      HorizontalAlignment="Right"
                                                      Margin="0,0,8,0"
                                                      VerticalAlignment="Center"
                                                      Fill="{StaticResource PrimaryForegroundColor}"
                                                      Stretch="None" />
                                            </Border>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource AccentColorBrush}" />
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="true">
                                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource AccentColorBrush}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter x:Name="ContentSite"
                                              IsHitTestVisible="False"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <Popup x:Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                                            Background="{StaticResource SecondaryBackgroundColor}"
                                            BorderThickness="1"
                                            BorderBrush="{StaticResource SeparatorColorBrush}"
                                            CornerRadius="4" />
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Padding" Value="8,5" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Foreground" Value="{StaticResource PrimaryForegroundColor}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter Property="Background" Value="{StaticResource AccentColorBrush}" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource SecondaryForegroundColor}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid Margin="25,20">
        <StackPanel>
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" ToolTipService.InitialShowDelay="200">
                <StackPanel.ToolTip>
                    <ToolTip>Enable or disable management for this monitor.</ToolTip>
                </StackPanel.ToolTip>
                <TextBlock Text="{Binding MonitorTitle}" Foreground="{StaticResource PrimaryForegroundColor}" FontSize="18" FontWeight="SemiBold" />
                <CheckBox IsChecked="{Binding IsManaged, UpdateSourceTrigger=PropertyChanged}"
                          Style="{StaticResource ModernCheckBox}"
                          Margin="10,0,0,0" />
            </StackPanel>

            <Separator Background="{StaticResource SeparatorColorBrush}" Margin="0,12" />

            <StackPanel Margin="0,15,0,0" IsEnabled="{Binding IsManaged}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" ToolTipService.InitialShowDelay="200">
                        <StackPanel.ToolTip>
                            <ToolTip Content="{Binding BehaviorSectionTooltip}" />
                        </StackPanel.ToolTip>
                        <TextBlock Text="BEHAVIOR" Foreground="{StaticResource SecondaryForegroundColor}" FontSize="12" FontWeight="Light" Margin="0,0,0,5" />
                        <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                            <RadioButton Content="Blackout" GroupName="Behavior" Style="{StaticResource ModernRadioButton}"
                                         IsChecked="{Binding Behavior, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static models:MonitorBehavior.Blackout}, UpdateSourceTrigger=PropertyChanged}" />
                            <RadioButton Content="Dim" GroupName="Behavior" Style="{StaticResource ModernRadioButton}" Margin="25,0,0,0"
                                         IsChecked="{Binding Behavior, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static models:MonitorBehavior.Dim}, UpdateSourceTrigger=PropertyChanged}"
                                         IsEnabled="{Binding IsDimBehaviorEnabled}"
                                         ToolTip="{Binding DimBehaviorTooltip}"
                                         ToolTipService.InitialShowDelay="200" />
                        </StackPanel>
                    </StackPanel>

                    <StackPanel Grid.Row="0" Grid.Column="1" Margin="40,0,0,0" IsEnabled="{Binding IsDimSliderEnabled}" VerticalAlignment="Center" ToolTipService.InitialShowDelay="200">
                        <StackPanel.ToolTip>
                            <ToolTip>Set the brightness level to use when this monitor is dimmed.</ToolTip>
                        </StackPanel.ToolTip>
                        <TextBlock Text="BRIGHTNESS LEVEL" Foreground="{StaticResource SecondaryForegroundColor}" FontSize="12" FontWeight="Light" />
                        <Grid Margin="0,8,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Slider Grid.Column="0" Minimum="0" Maximum="100" Value="{Binding DimLevel, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ModernSlider}" TickFrequency="1" />
                            <TextBlock Grid.Column="1" Foreground="{StaticResource PrimaryForegroundColor}" Margin="15,0,0,0" VerticalAlignment="Center">
                                <TextBlock.Text>
                                    <Binding Path="DimLevel" StringFormat="{}{0:F0}%" />
                                </TextBlock.Text>
                            </TextBlock>
                        </Grid>
                    </StackPanel>

                    <StackPanel Grid.Row="1" Grid.Column="0" Margin="0,20,0,0" ToolTipService.InitialShowDelay="200">
                        <StackPanel.ToolTip>
                            <ToolTip Content="Set the duration of user inactivity required before the selected behavior is triggered." />
                        </StackPanel.ToolTip>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="IDLE TIMER" Foreground="{StaticResource SecondaryForegroundColor}" FontSize="12" FontWeight="Light" />
                        </StackPanel>
                        <Grid Margin="0,8,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="0">
                                <TextBlock Text="Unit" Foreground="{StaticResource SecondaryForegroundColor}" FontSize="11" Margin="4,0,0,3" />
                                <ComboBox Width="120"
                                          ItemsSource="{Binding TimeUnits}"
                                          SelectedItem="{Binding SelectedTimeUnit, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource ModernComboBox}" />
                            </StackPanel>
                            <StackPanel Grid.Column="1" Margin="10,0,0,0">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Value" Foreground="{StaticResource SecondaryForegroundColor}" FontSize="11" Margin="4,0,0,3" />
                                    <TextBlock Text="*" Foreground="{StaticResource DestructiveColorBrush}" FontWeight="Bold" Margin="4,-2,0,0" VerticalAlignment="Top"
                                               Visibility="{Binding IdleValueError, Converter={StaticResource ErrorVisibilityConverter}}" />
                                </StackPanel>
                                <TextBox x:Name="IdleValueTextBox" Width="80"
                                         Style="{StaticResource ModernTextBox}"
                                         Text="{Binding IdleValue, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, TargetNullValue=''}" />
                            </StackPanel>
                        </Grid>
                    </StackPanel>

                    <StackPanel Grid.Row="1" Grid.Column="1" Margin="40,20,0,0" ToolTipService.InitialShowDelay="200">
                        <StackPanel.ToolTip>
                            <ToolTip>
                                <TextBlock>
                                    <Run FontWeight="SemiBold" TextDecorations="Underline">Monitor-Specific Conditions</Run><LineBreak />
                                    These options prevent ONLY this monitor from sleeping.<LineBreak /><LineBreak />
                                    • <Run FontWeight="SemiBold">Mouse cursor is on this monitor:</Run><LineBreak />
                                    <Span Foreground="{StaticResource SecondaryForegroundColor}">Keeps this monitor awake just by leaving your mouse on it.</Span><LineBreak />
                                    • <Run FontWeight="SemiBold">Contains the active window:</Run><LineBreak />
                                    <Span Foreground="{StaticResource SecondaryForegroundColor}">Keeps the monitor awake if it has the application you're currently using (the window you last clicked).</Span>
                                    <LineBreak /><LineBreak />
                                    <Run FontWeight="SemiBold" TextDecorations="Underline">General Condition</Run><LineBreak />
                                    This option is system-wide.<LineBreak /><LineBreak />
                                    • <Run FontWeight="SemiBold">System-wide user input:</Run><LineBreak />
                                    <Span Foreground="{StaticResource SecondaryForegroundColor}">Windows' standard behavior. Any input on ANY monitor keeps this monitor active.</Span>
                                </TextBlock>
                            </ToolTip>
                        </StackPanel.ToolTip>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="CONSIDER ACTIVE WHEN..." Foreground="{StaticResource SecondaryForegroundColor}" FontSize="12" FontWeight="Light" />
                            <TextBlock Text="*" Foreground="{StaticResource DestructiveColorBrush}" FontWeight="Bold" Margin="4,-2,0,0" VerticalAlignment="Top"
                                Visibility="{Binding ActiveConditionsError, Converter={StaticResource ErrorVisibilityConverter}}" />
                        </StackPanel>

                        <StackPanel Margin="0,8,0,0">
                            <CheckBox Margin="0,0,0,8" Style="{StaticResource ModernCheckBox}" Content="Mouse cursor is on this monitor"
                                IsChecked="{Binding IsActiveOnMousePosition, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                            <CheckBox Margin="0,0,0,8" Style="{StaticResource ModernCheckBox}" Content="Application is focused on this monitor"
                                IsChecked="{Binding IsActiveOnActiveWindow, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                            <CheckBox Margin="0,0,0,0" Style="{StaticResource ModernCheckBox}" Content="System has user input"
                                      IsChecked="{Binding IsActiveOnInput, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </StackPanel>
        </StackPanel>
    </Grid>
</UserControl>