<UserControl x:Class="OLED_Sleeper.Views.MonitorConfigurationView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:viewModels="clr-namespace:OLED_Sleeper.ViewModels"
             xmlns:converters="clr-namespace:OLED_Sleeper.Converters"
             xmlns:models="clr-namespace:OLED_Sleeper.Models"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=viewModels:MonitorConfigurationViewModel}"
             FontFamily="Bahnschrift">

    <UserControl.Resources>
        <converters:EnumToBooleanConverter x:Key="EnumToBooleanConverter"/>

        <Style x:Key="ModernCheckBox" TargetType="CheckBox">
            <Setter Property="Foreground" Value="{StaticResource PrimaryForegroundColor}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <StackPanel Orientation="Horizontal">
                            <Border x:Name="Box" Width="18" Height="18" BorderThickness="1" CornerRadius="3" 
                                    BorderBrush="{StaticResource SecondaryForegroundColor}" Background="Transparent">
                                <Viewbox Margin="2">
                                    <Path x:Name="CheckMark" Data="M 0,5 L 4,9 L 10,1" StrokeThickness="2" Stroke="{StaticResource AccentColorBrush}" Visibility="Collapsed"/>
                                </Viewbox>
                            </Border>
                            <ContentPresenter Margin="8,0,0,0" VerticalAlignment="Center"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ModernRadioButton" TargetType="RadioButton">
            <Setter Property="Foreground" Value="{StaticResource PrimaryForegroundColor}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <StackPanel Orientation="Horizontal" Background="Transparent">
                            <Grid Width="18" Height="18">
                                <Ellipse Stroke="{StaticResource SecondaryForegroundColor}" StrokeThickness="1"/>
                                <Ellipse x:Name="CheckMark" Fill="{StaticResource AccentColorBrush}" Width="10" Height="10" Visibility="Collapsed"/>
                            </Grid>
                            <ContentPresenter Margin="8,0,0,0" VerticalAlignment="Center"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                                <Setter TargetName="CheckMark" Property="Fill" Value="{StaticResource SecondaryForegroundColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ModernSlider" TargetType="Slider">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Slider">
                        <Grid>
                            <Border x:Name="Track" Height="4" Background="{StaticResource TertiaryBackgroundColor}" CornerRadius="2"/>
                            <Canvas>
                                <Border x:Name="PART_SelectionRange" Background="{StaticResource AccentColorBrush}" Height="4" CornerRadius="2"/>
                            </Canvas>
                            <Track x:Name="PART_Track">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Width="16" Height="16" Background="{StaticResource PrimaryForegroundColor}" BorderBrush="{StaticResource SecondaryForegroundColor}" BorderThickness="1">
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="Thumb">
                                                <Ellipse Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Thumb" Property="BorderBrush" Value="{StaticResource AccentColorBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ModernTextBox" TargetType="TextBox">
            <Setter Property="Background" Value="{StaticResource TertiaryBackgroundColor}"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryForegroundColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource SeparatorColorBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8,5"/>
            <Setter Property="CaretBrush" Value="{StaticResource PrimaryForegroundColor}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="border" CornerRadius="4" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource AccentColorBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ModernComboBox" TargetType="{x:Type ComboBox}">
            <Setter Property="Foreground" Value="{StaticResource PrimaryForegroundColor}"/>
            <Setter Property="Background" Value="{StaticResource TertiaryBackgroundColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource SeparatorColorBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8,5"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton x:Name="ToggleButton"
                                          Focusable="false"
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border x:Name="templateRoot" CornerRadius="4"
                                                Background="{StaticResource TertiaryBackgroundColor}"
                                                BorderBrush="{StaticResource SeparatorColorBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}">
                                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" Margin="0" Width="{TemplateBinding ActualWidth}">
                                                <Path x:Name="arrow"
                                                      Data="F1 M 0,0 L 2.5,2.5 L 5,0 Z"
                                                      HorizontalAlignment="Right"
                                                      Margin="0,0,8,0"
                                                      VerticalAlignment="Center"
                                                      Fill="{StaticResource PrimaryForegroundColor}"
                                                      Stretch="None"/>
                                            </Border>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource AccentColorBrush}" />
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="true">
                                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource AccentColorBrush}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter x:Name="ContentSite"
                                              IsHitTestVisible="False"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Popup x:Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True" 
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                                            Background="{StaticResource SecondaryBackgroundColor}"
                                            BorderThickness="1"
                                            BorderBrush="{StaticResource SeparatorColorBrush}"
                                            CornerRadius="4"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="8,5"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryForegroundColor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter Property="Background" Value="{StaticResource AccentColorBrush}"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource SecondaryForegroundColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

    <Grid Margin="25,20">
        <StackPanel>
            <TextBlock Text="{Binding MonitorTitle}" Foreground="{StaticResource PrimaryForegroundColor}" FontSize="18" FontWeight="SemiBold"/>
            <Separator Background="{StaticResource SeparatorColorBrush}" Margin="0,12"/>

            <CheckBox Content="Manage this monitor" Style="{StaticResource ModernCheckBox}" IsChecked="{Binding IsManaged, UpdateSourceTrigger=PropertyChanged}"/>

            <StackPanel Margin="0,20,0,0" IsEnabled="{Binding IsManaged}">
                <TextBlock Text="BEHAVIOR" Foreground="{StaticResource SecondaryForegroundColor}" FontSize="12" FontWeight="Light" Margin="0,0,0,5"/>
                <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                    <RadioButton Content="Blackout" GroupName="Behavior" Style="{StaticResource ModernRadioButton}"
                                 IsChecked="{Binding Behavior, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static models:MonitorBehavior.Blackout}, UpdateSourceTrigger=PropertyChanged}"/>
                    <RadioButton Content="Dim" GroupName="Behavior" Style="{StaticResource ModernRadioButton}" Margin="25,0,0,0"
                                 IsChecked="{Binding Behavior, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static models:MonitorBehavior.Dim}, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>

                <StackPanel Margin="0,20,0,0" IsEnabled="{Binding IsDimSliderEnabled}">
                    <TextBlock Text="DIM LEVEL" Foreground="{StaticResource SecondaryForegroundColor}" FontSize="12" FontWeight="Light"/>
                    <Grid Margin="0,8,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Slider Grid.Column="0" Minimum="0" Maximum="100" Value="{Binding DimLevel, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ModernSlider}" TickFrequency="1"/>
                        <TextBlock Grid.Column="1" Foreground="{StaticResource PrimaryForegroundColor}" Margin="15,0,0,0" VerticalAlignment="Center">
                            <TextBlock.Text>
                                <Binding Path="DimLevel" StringFormat="{}{0:F0}%"/>
                            </TextBlock.Text>
                        </TextBlock>
                    </Grid>
                </StackPanel>

                <StackPanel Margin="0,20,0,0">
                    <TextBlock Text="IDLE TIMER" Foreground="{StaticResource SecondaryForegroundColor}" FontSize="12" FontWeight="Light"/>
                    <Grid Margin="0,8,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0">
                            <TextBlock Text="Unit" Foreground="{StaticResource SecondaryForegroundColor}" FontSize="11" Margin="4,0,0,3"/>
                            <ComboBox Width="120"
                                      ItemsSource="{Binding TimeUnits}" 
                                      SelectedItem="{Binding SelectedTimeUnit, UpdateSourceTrigger=PropertyChanged}"
                                      Style="{StaticResource ModernComboBox}"/>
                        </StackPanel>

                        <StackPanel Grid.Column="1" Margin="10,0,0,0">
                            <TextBlock Text="Value" Foreground="{StaticResource SecondaryForegroundColor}" FontSize="11" Margin="4,0,0,3"/>
                            <TextBox Width="80"
                                     Text="{Binding IdleValue, UpdateSourceTrigger=PropertyChanged}"
                                     Style="{StaticResource ModernTextBox}"/>
                        </StackPanel>
                    </Grid>
                </StackPanel>

            </StackPanel>
        </StackPanel>
    </Grid>
</UserControl>